{"version":3,"file":"ZekiCore.js","sources":["../src/collection.js","../src/element.js","../src/debug.js","../src/core.js","../src/dom-select.js","../src/dom-create.js","../src/loader.js","../src/index.js","../src/init.js"],"sourcesContent":["// src/collection.js\r\nexport class ZekiCollection extends Array {\r\n  constructor(elements = []) {\r\n    super(); // 呼叫父類別的建構子\r\n    for (let i = 0; i < elements.length; i++) {\r\n      this[i] = elements[i];\r\n    }\r\n  }\r\n}\r\n\r\nfunction addClass(className) {\r\n  this.forEach((item) =>\r\n    item.hasOwnProperty(\"el\")\r\n      ? item.el.classList.add(className)\r\n      : item.classList.add(className)\r\n  );\r\n  return this; // 支援鏈式呼叫\r\n}\r\n\r\nfunction delClass(className) {\r\n  this.forEach((item) =>\r\n    item.hasOwnProperty(\"el\")\r\n      ? item.el.classList.remove(className)\r\n      : item.classList.remove(className)\r\n  );\r\n  return this; // 支援鏈式呼叫\r\n}\r\n\r\nfunction siblings() {\r\n  const resultSet = new Set();\r\n\r\n  for (let i = 0; i < this.length; i++) {\r\n    const el = this[i].el; // 取得 DOM 元素\r\n\r\n    // 處理前面的兄弟元素\r\n    let prev = el.previousSibling;\r\n    while (prev) {\r\n      if (prev.nodeType === 1 && !this.includes(prev)) {\r\n        resultSet.add(prev);\r\n      }\r\n      prev = prev.previousSibling;\r\n    }\r\n\r\n    // 處理後面的兄弟元素\r\n    let next = el.nextSibling;\r\n    while (next) {\r\n      if (next.nodeType === 1 && !this.includes(next)) {\r\n        resultSet.add(next);\r\n      }\r\n      next = next.nextSibling;\r\n    }\r\n  }\r\n\r\n  // 轉回 array，依據原始 DOM 結構順序排序\r\n  const allSiblings = Array.from(resultSet);\r\n  allSiblings.sort((a, b) => {\r\n    if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_PRECEDING) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n\r\n  return new ZekiCollection(allSiblings);\r\n}\r\n\r\nfunction length() {\r\n  return this.length;\r\n}\r\n\r\nfunction values() {\r\n  let index = 0;\r\n  const self = this;\r\n  return {\r\n    next() {\r\n      return index < self.length\r\n        ? { value: self[index++], done: false }\r\n        : { value: undefined, done: true };\r\n    },\r\n  };\r\n}\r\n\r\nObject.defineProperties(ZekiCollection.prototype, {\r\n  addClass: {\r\n    value: addClass,\r\n    writable: true,\r\n    enumerable: true,\r\n    configurable: false,\r\n  },\r\n  delClass: {\r\n    value: delClass,\r\n    writable: false,\r\n    enumerable: true,\r\n    configurable: false,\r\n  },\r\n  siblings: {\r\n    value: siblings,\r\n    writable: false,\r\n    enumerable: true,\r\n    configurable: false,\r\n  },\r\n  length: {\r\n    get: length,\r\n    enumerable: true,\r\n    configurable: false,\r\n  },\r\n  [Symbol.iterator]: {\r\n    value: values,\r\n    writable: false,\r\n    enumerable: false,\r\n    configurable: false,\r\n  },\r\n  [Symbol.toStringTag]: {\r\n    value: \"ZekiCollection\",\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n});\r\n","// src/element.js\r\nimport { ZekiCollection } from \"./collection.js\";\r\nexport class ZekiElement {\r\n  constructor(el) {\r\n    this.el = el;\r\n  }\r\n  /**\r\n   * get elements by tag name.\r\n   * @param {string} tagName\r\n   * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n   */\r\n  getTag(tagName) {\r\n    const htmlCollection = this.el.getElementsByTagName(tagName);\r\n    const elements = Array.from(htmlCollection, (el) => new ZekiElement(el));\r\n    return new ZekiCollection(elements);\r\n  }\r\n  /**\r\n   * get elements by class name.\r\n   * @param {stirng} className\r\n   * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n   */\r\n  getClass(className) {\r\n    const htmlCollection = this.el.getElementsByClassName(className);\r\n    const elements = Array.from(htmlCollection, (el) => new ZekiElement(el));\r\n    return new ZekiCollection(elements);\r\n  }\r\n  /**\r\n   * get attribute\r\n   * @param {string} attr - DOM 元素屬性名稱\r\n   * @returns {string} - 對應的 DOM 元素屬性值\r\n   */\r\n  getAttr(attr) {\r\n    return this.el.getAttribute(attr);\r\n  }\r\n  /**\r\n   * set attribute\r\n   * @param {string} key - DOM 元素屬性名稱\r\n   * @param {string} val - DOM 元素屬性值\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  setAttr(key, val) {\r\n    this.el.setAttribute(key, val);\r\n    return this;\r\n  }\r\n  /**\r\n   * set attributes\r\n   * @param {*} obj\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  setAttrs(obj) {\r\n    Object.entries(obj).forEach(([key, val]) => this.el.setAttribute(key, val));\r\n    return this;\r\n  }\r\n  /**\r\n   * delete attribute\r\n   * @param {string} attr - DOM 元素屬性名稱\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delAttr(attr) {\r\n    this.el.removeAttribute(attr);\r\n    return this;\r\n  }\r\n  /**\r\n   * append Child\r\n   * @param {*} child - DOM 元素或 ZekiElement 實例\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  addKid(child) {\r\n    child.hasOwnProperty(\"el\")\r\n      ? this.el.appendChild(child.el)\r\n      : this.el.appendChild(child);\r\n    return this;\r\n  }\r\n  /**\r\n   * batch append Child\r\n   * @param {Array} children - DOM 元素或 ZekiElement 實例的陣列\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  addKids(...children) {\r\n    children.forEach((child) => {\r\n      child.hasOwnProperty(\"el\")\r\n        ? this.el.appendChild(child.el)\r\n        : this.el.appendChild(child);\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * remove Child\r\n   * @param {*} child - DOM 元素或 ZekiElement 實例\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delKid(child) {\r\n    child.hasOwnProperty(\"el\")\r\n      ? this.el.removeChild(child.el)\r\n      : this.el.removeChild(child);\r\n    return this;\r\n  }\r\n  /**\r\n   * batch remove Child\r\n   * @param {Array} children - DOM 元素或 ZekiElement 實例的陣列\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delKids(children) {\r\n    children.forEach((child) => {\r\n      child.hasOwnProperty(\"el\")\r\n        ? this.el.removeChild(child.el)\r\n        : this.el.removeChild(child);\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * \r\n   * @param {*} newNode - 新的 DOM 元素或 ZekiElement 實例\r\n   * @param {*} referenceNode \r\n   * @returns \r\n   */\r\n  before(newNode, referenceNode) {\r\n    this.el.insertBefore(newNode, referenceNode);\r\n    return this;\r\n  }\r\n  /**\r\n   * add Class\r\n   * @param {string} className - 要添加的類名\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  addClass(className) {\r\n    this.el.classList.add(className);\r\n    return this;\r\n  }\r\n  /**\r\n   * remove Class\r\n   * @param {string} className - 要刪除的類名\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delClass(className) {\r\n    this.el.classList.remove(className);\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * getId('id').siblings().delClass('style').addClass('style2');\r\n   * @returns {ZekiCollection} - 返回當前元素的兄弟元素集合\r\n   */\r\n  siblings() {\r\n    const siblings = [];\r\n    let p = this.el.previousSibling;\r\n    while (p) {\r\n      if (p.nodeType === 1) siblings.push(new ZekiElement(p));\r\n      p = p.previousSibling;\r\n    }\r\n    siblings.reverse();\r\n    let n = this.el.nextSibling;\r\n    while (n) {\r\n      if (n.nodeType === 1) siblings.push(new ZekiElement(n));\r\n      n = n.nextSibling;\r\n    }\r\n    return new ZekiCollection(siblings);\r\n  }\r\n  /**\r\n   *\r\n   * @param {*} param0\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  dataBind({ data = {} } = {}) {\r\n    const nodes = this.el.querySelectorAll(\"*\");\r\n    nodes.forEach((node) => {\r\n      const zText = node.getAttribute(\"z-text\");\r\n      const zHtml = node.getAttribute(\"z-html\");\r\n      if (zText && data[zText] !== undefined) {\r\n        node.innerText = data[zText];\r\n      }\r\n      if (zHtml && data[zHtml] !== undefined) {\r\n        node.innerHTML = data[zHtml];\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   *\r\n   * @param {string} eventType - 事件類型\r\n   * @param {function} handler - 事件處理函數\r\n   * @param {boolean} options - 是否使用捕獲模式\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  on(eventType, handler, options = false) {\r\n    if (typeof handler !== \"function\") return;\r\n    this.el.addEventListener(eventType, handler, options);\r\n    return this;\r\n  }\r\n  /**\r\n   *\r\n   * @param {string} eventType - 事件類型\r\n   * @param {function} handler - 事件處理函數\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  off(eventType, handler) {\r\n    if (typeof handler !== \"function\") return;\r\n    this.el.removeEventListener(eventType, handler);\r\n    return this;\r\n  }\r\n}\r\n","// src/debug.js\r\nlet isDebug = false;\r\n\r\n/**\r\n * 設定是否開啟 debug 模式\r\n * @param {boolean} value\r\n */\r\nexport function setDebug(value) {\r\n  isDebug = value;\r\n}\r\n\r\n/**\r\n * 設定 debug 模式\r\n * @param  {...any} args \r\n */\r\nexport function log(...args) {\r\n  if (isDebug) console.log(\"[ZekiCore Debug]:\", ...args);\r\n}","import {  one, all, getId, getIds, getTag, getClass } from \"./dom-select.js\";\r\nimport {  makeTag, makeText,  } from \"./dom-create.js\";\r\nimport { importJS, loadZekiImports } from \"./loader.js\";\r\nimport { setDebug, log } from \"./debug.js\";\r\n\r\nexport const ZekiCore = {};\r\n\r\n// 使用 defineProperty 加到命名空間上（不可列舉、不可寫入與不可配置）\r\nObject.defineProperties(ZekiCore, {\r\n  \"one\": {\r\n    value: one,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"all\": {\r\n    value: all,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getId\": {\r\n    value: getId,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getIds\": {\r\n    value: getIds,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getTag\": {\r\n    value: getTag,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getClass\": {\r\n    value: getClass,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"makeTag\": {\r\n    value: makeTag,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"makeText\": {\r\n    value: makeText,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"importJS\": {\r\n    value: importJS,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"loadZekiImports\": {\r\n    value: loadZekiImports,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"setDebug\": {\r\n    value: setDebug,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"log\": {\r\n    value: log,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  // ...更多函式\r\n  \"version\": {\r\n    value: '1.0.0',\r\n    enumerable: false, // 不會在 for...in 被列出\r\n    writable: false, // 無法被覆寫\r\n    configurable: false, // 無法刪除\r\n  },\r\n});","// src/dom-select.js\r\nimport { ZekiElement } from \"./element.js\";\r\nimport { ZekiCollection } from './collection.js';\r\n\r\n/**\r\n * get element by selector.\r\n * @param {string} selector - CSS 選擇器\r\n * @returns {ZekiElement} - 對應的 DOM 元素\r\n */\r\nexport function one(selector) {\r\n  const el = document.querySelector(selector);\r\n  return el ? new ZekiElement(el) : null;\r\n}\r\n\r\n/**\r\n * get elements by selector.\r\n * @param {string} selector - CSS 選擇器\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function all(selector) {\r\n  const nodeList = document.querySelectorAll(selector);\r\n  const elements = Array.from(nodeList, el => new ZekiElement(el));\r\n  return new ZekiCollection(elements);\r\n}\r\n\r\n/**\r\n * get element by id.\r\n * @param {string} id - 元素 ID\r\n * @returns {ZekiElement} - 對應的 DOM 元素\r\n */\r\nexport function getId(id) {\r\n  const el = document.getElementById(id);\r\n  return el ? new ZekiElement(el) : null;\r\n}\r\n\r\n/**\r\n * get elements by id array.\r\n * @param {Array} arr - 元素 ID 陣列\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function getIds(...ids) {\r\n   const elements = ids.map((id) => {\r\n    const el = document.getElementById(id);\r\n    if (el) {\r\n      return new ZekiElement(el);\r\n    } else {\r\n      console.warn(`getIds: ${id} is not exist`);\r\n      return null;\r\n    }\r\n  }).filter((el) => el !== null);\r\n  return new ZekiCollection(elements);\r\n}\r\n\r\n/**\r\n * get elements by tag name.\r\n * @param {string} tagName - 元素名稱\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function getTag(tagName) {\r\n  const htmlCollection = document.getElementsByTagName(tagName);\r\n  const elements = Array.from(htmlCollection, el => new ZekiElement(el));\r\n  return new ZekiCollection(elements);\r\n}\r\n\r\n/**\r\n * get elements by class name.\r\n * @param {string} className - 類別名稱\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function getClass(className) {\r\n  const htmlCollection = document.getElementsByClassName(className);\r\n  const elements = Array.from(htmlCollection, el => new ZekiElement(el));\r\n  return new ZekiCollection(elements);\r\n}\r\n","// src/dom-create.js\r\n\r\nimport { ZekiElement } from \"./element.js\";\r\n\r\n/**\r\n * create elements by tag name.\r\n * @param {string} tagName - 元素名稱\r\n * @returns {HTMLElement} - 對應的 DOM 元素\r\n */\r\nexport function makeTag(tagName) {\r\n  return new ZekiElement(document.createElement(tagName));\r\n}\r\n\r\n/**\r\n * create text node.\r\n * @param {string} textContnet - 文字內容\r\n * @returns {Text} - 對應的 DOM 文字節點\r\n */\r\nexport function makeText(textContnet) {\r\n  return document.createTextNode(textContnet);\r\n}\r\n","// src/loader.js\r\nexport function importJS(jsArray) {\r\n  let scriptTag;\r\n  for (let i = 0; i < jsArray.length; i++) {\r\n    scriptTag = document.createElement(\"script\");\r\n    scriptTag.async = false;\r\n    scriptTag.type = \"text/javascript\";\r\n    scriptTag.src = jsArray[i];\r\n    document.head.appendChild(scriptTag);\r\n  }\r\n}\r\n\r\nexport function loadZekiImports() {\r\n  const scripts = document.querySelectorAll('script[src*=\"ZekiCore\"][import]');\r\n  for (const script of scripts) {\r\n    const ImportSrc = script.getAttribute(\"import\").trim();\r\n    if (ImportSrc) {\r\n      const importTag = document.createElement(\"script\");\r\n      importTag.async = false;\r\n      importTag.type = \"text/javascript\";\r\n      importTag.src = `scripts/${ImportSrc}.js`;\r\n      importTag.onerror = () => {\r\n        console.error(`Failed to load script: ${importTag.src}`);\r\n      };\r\n      document.head.appendChild(importTag);\r\n      script.removeAttribute(\"import\");\r\n    }\r\n  }\r\n}\r\n","// src/index.js\r\nimport { ZekiCore } from './core.js';\r\nimport { initializeZekiCore } from './init.js';\r\n\r\nObject.freeze(ZekiCore); // 避免改動\r\ninitializeZekiCore(); // 初始化 ZekiCore\r\n\r\nif (typeof window !== \"undefined\") {\r\n  window.ZekiCore = ZekiCore; // 全域變數名稱 window.ZekiCore\r\n  window.zk = ZekiCore; // 簡寫風格\r\n}","import { ZekiCore } from './core.js';\r\nexport function initializeZekiCore() {\r\n  // 顯示版權聲明\r\n  const crz = \"Copyright Zone\";\r\n  const line = crz.padStart(crz.length + 15, \"-\").padEnd(crz.length + 30, \"-\");\r\n  console.log(\r\n    `%c${line}\\n\r\n    Author: Zeki\r\n    Mail: zekixfly@hotmail.com\r\n\r\n    版權聲明:\r\n    一、本網站的版權屬原作者所有。\r\n    二、盼望尊重知識產權，如要轉貼複製請註明出處來源。\r\n    三、出處來源: https://zekixfly.github.io/\r\n    \\n${line}`,\r\n    \"font-size: small; color: brown;\"\r\n  );\r\n\r\n  // 禁止使用者操作\r\n  document.oncontextmenu = () => false; // disable contextmenu\r\n  document.ondragstart = () => false; // disable drag\r\n  document.onselectstart = () => false; // disable select\r\n\r\n  // DOM 完成後載入 ZekiCore imports\r\n  document.addEventListener(\"DOMContentLoaded\", ZekiCore.loadZekiImports); // load ZekiCore.js imports\r\n}\r\n"],"names":["ZekiCollection","Array","constructor","elements","super","i","length","this","Object","defineProperties","prototype","addClass","value","className","forEach","item","hasOwnProperty","el","classList","add","writable","enumerable","configurable","delClass","remove","siblings","resultSet","Set","prev","previousSibling","nodeType","includes","next","nextSibling","allSiblings","from","sort","a","b","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","get","Symbol","iterator","values","index","self","done","undefined","toStringTag","ZekiElement","getTag","tagName","htmlCollection","getElementsByTagName","getClass","getElementsByClassName","getAttr","attr","getAttribute","setAttr","key","val","setAttribute","setAttrs","obj","entries","delAttr","removeAttribute","addKid","child","appendChild","addKids","children","delKid","removeChild","delKids","before","newNode","referenceNode","insertBefore","p","push","reverse","n","dataBind","data","querySelectorAll","node","zText","zHtml","innerText","innerHTML","on","eventType","handler","options","addEventListener","off","removeEventListener","isDebug","ZekiCore","one","selector","document","querySelector","all","nodeList","getId","id","getElementById","getIds","ids","map","console","warn","filter","makeTag","createElement","makeText","textContnet","createTextNode","importJS","jsArray","scriptTag","async","type","src","head","loadZekiImports","scripts","script","ImportSrc","trim","importTag","onerror","error","setDebug","log","args","version","freeze","initializeZekiCore","crz","line","padStart","padEnd","oncontextmenu","ondragstart","onselectstart","window","zk"],"mappings":"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"}