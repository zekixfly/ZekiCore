{"version":3,"file":"ZekiCore.js","sources":["../src/element.js","../src/collection.js","../src/debug.js","../src/core.js","../src/dom-select.js","../src/dom-create.js","../src/loader.js","../src/index.js","../src/init.js"],"sourcesContent":["// src/element.js\r\nexport class ZekiElement {\r\n  constructor(el) {\r\n    this.el = el;\r\n  }\r\n  /**\r\n   * get elements by tag name.\r\n   * @param {*} tag\r\n   * @returns {HTMLCollection} - 對應的 DOM 元素集合\r\n   */\r\n  getTag(tag) {\r\n    return Array.from(this.el.getElementsByTagName(tag)).map(\r\n      (el) => new ZekiElement(el)\r\n    );\r\n  }\r\n  /**\r\n   * get elements by class name.\r\n   * @param {*} className\r\n   * @returns {HTMLCollection} - 對應的 DOM 元素集合\r\n   */\r\n  getClass(className) {\r\n    return Array.from(this.el.getElementsByClassName(className)).map(\r\n      (el) => new ZekiElement(el)\r\n    );\r\n  }\r\n  /**\r\n   * get attribute\r\n   * @param {*} attr\r\n   * @returns {string} - 對應的 DOM 元素屬性值\r\n   */\r\n  getAttr(attr) {\r\n    return this.el.getAttribute(attr);\r\n  }\r\n  /**\r\n   * set attribute\r\n   * @param {*} key\r\n   * @param {*} val\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  setAttr(key, val) {\r\n    this.el.setAttribute(key, val);\r\n    return this;\r\n  }\r\n  /**\r\n   * set attributes\r\n   * @param {*} obj\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  setAttrs(obj) {\r\n    Object.entries(obj).forEach(([key, val]) => this.el.setAttribute(key, val));\r\n    return this;\r\n  }\r\n  /**\r\n   * delete attribute\r\n   * @param {*} attr\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delAttr(attr) {\r\n    this.el.removeAttribute(attr);\r\n    return this;\r\n  }\r\n  /**\r\n   * append Child\r\n   * @param {*} child\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  addKid(child) {\r\n    child.hasOwnProperty(\"el\")\r\n      ? this.el.appendChild(child.el)\r\n      : this.el.appendChild(child);\r\n    return this;\r\n  }\r\n  /**\r\n   * batch append Child\r\n   * @param {*} children\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  addKids(children) {\r\n    children.forEach((child) => {\r\n      child.hasOwnProperty(\"el\")\r\n        ? this.el.appendChild(child.el)\r\n        : this.el.appendChild(child);\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * remove Child\r\n   * @param {*} child\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delKid(child) {\r\n    this.el.removeChild(child);\r\n    return this;\r\n  }\r\n  /**\r\n   * batch remove Child\r\n   * @param {*} children\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delKids(children) {\r\n    children.forEach((child) => this.el.removeChild(child));\r\n    return this;\r\n  }\r\n  /**\r\n   * add Class\r\n   * @param {*} className\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  addClass(className) {\r\n    this.el.classList.add(className);\r\n    return this;\r\n  }\r\n  /**\r\n   * remove Class\r\n   * @param {*} className\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  delClass(className) {\r\n    this.el.classList.remove(className);\r\n    return this;\r\n  }\r\n  /**\r\n   * getId('id').siblings().delClass('style').addClass('style2');\r\n   * @returns {Array} - 返回當前元素的兄弟元素集合\r\n   */\r\n  siblings() {\r\n    const siblings = [];\r\n    let p = this.el.previousSibling;\r\n    while (p) {\r\n      if (p.nodeType === 1) siblings.push(new ZekiElement(p));\r\n      p = p.previousSibling;\r\n    }\r\n    siblings.reverse();\r\n    let n = this.el.nextSibling;\r\n    while (n) {\r\n      if (n.nodeType === 1) siblings.push(new ZekiElement(n));\r\n      n = n.nextSibling;\r\n    }\r\n    return siblings;\r\n  }\r\n  /**\r\n   *\r\n   * @param {*} param0\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  dataBind({ data = {} } = {}) {\r\n    const nodes = this.el.querySelectorAll(\"*\");\r\n    nodes.forEach((node) => {\r\n      const zText = node.getAttribute(\"z-text\");\r\n      const zHtml = node.getAttribute(\"z-html\");\r\n      if (zText && data[zText] !== undefined) {\r\n        node.innerText = data[zText];\r\n      }\r\n      if (zHtml && data[zHtml] !== undefined) {\r\n        node.innerHTML = data[zHtml];\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   *\r\n   * @param {*} eventType\r\n   * @param {*} handler\r\n   * @param {*} options\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  on(eventType, handler, options = false) {\r\n    if (typeof handler !== \"function\") return;\r\n    this.el.addEventListener(eventType, handler, options);\r\n    return this;\r\n  }\r\n  /**\r\n   *\r\n   * @param {*} eventType\r\n   * @param {*} handler\r\n   * @returns {ZekiElement} - 返回當前的 ZekiElement 實例\r\n   */\r\n  off(eventType, handler) {\r\n    if (typeof handler !== \"function\") return;\r\n    this.el.removeEventListener(eventType, handler);\r\n    return this;\r\n  }\r\n}\r\n","// src/collection.js\r\n\r\nexport class ZekiCollection extends Array {\r\n  constructor(elements = []) {\r\n    super(); // 呼叫父類別的建構子\r\n    for (let i = 0; i < elements.length; i++) {\r\n      this[i] = elements[i];\r\n    }\r\n    this.length = elements.length;\r\n  }\r\n\r\n  // forEach 方法\r\n  forEach(callback) {\r\n    for (let i = 0; i < this.length; i++) {\r\n      callback(this[i], i, this);\r\n    }\r\n    return this; // 支援鏈式呼叫\r\n  }\r\n\r\n  addClass(className) {\r\n    this.forEach((item) =>\r\n      item.hasOwnProperty(\"el\")\r\n        ? item.el.classList.add(className)\r\n        : item.classList.add(className)\r\n    );\r\n    return this; // 支援鏈式呼叫\r\n  }\r\n\r\n  delClass(className) {\r\n    this.forEach((item) =>\r\n      item.hasOwnProperty(\"el\")\r\n        ? item.el.classList.remove(className)\r\n        : item.classList.remove(className)\r\n    );\r\n    return this; // 支援鏈式呼叫\r\n  }\r\n\r\n  //EX: document.getIds('id1','id2']).siblings().addClass('style').delClass('style')\r\n  siblings() {\r\n    const resultSet = new Set();\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n      const el = this[i].el; // 取得 DOM 元素\r\n\r\n      // 處理前面的兄弟元素\r\n      let prev = el.previousSibling;\r\n      while (prev) {\r\n        if (prev.nodeType === 1 && !this.includes(prev)) {\r\n          resultSet.add(prev);\r\n        }\r\n        prev = prev.previousSibling;\r\n      }\r\n\r\n      // 處理後面的兄弟元素\r\n      let next = el.nextSibling;\r\n      while (next) {\r\n        if (next.nodeType === 1 && !this.includes(next)) {\r\n          resultSet.add(next);\r\n        }\r\n        next = next.nextSibling;\r\n      }\r\n    }\r\n\r\n    // 轉回 array，依據原始 DOM 結構順序排序\r\n    const allSiblings = Array.from(resultSet);\r\n    allSiblings.sort((a, b) => {\r\n      if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_PRECEDING) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    });\r\n\r\n    return new ZekiCollection(allSiblings);\r\n  }\r\n\r\n  arrSiblings() {\r\n    var a = [], //definede array to push this's siblings element.\r\n      p,\r\n      n,\r\n      oriArrLength;\r\n\r\n    for (var i = 0; i < this.length; i++) {\r\n      p = this[i].el.previousSibling; //The \"this\" mean is Finding id、class or tagname multiple element's array.\r\n      while (p) {\r\n        if (this.indexOf(p) == -1) {\r\n          //First check previous element not equal to this array's element.\r\n          if (p.nodeType === 1) {\r\n            if (a.length > 0) {\r\n              if (a.indexOf(p) == -1) {\r\n                //Second check previous element not equal to a's array elelment.\r\n                a.push(p);\r\n              }\r\n            } else {\r\n              a.push(p);\r\n            }\r\n          }\r\n        }\r\n\r\n        p = p.previousSibling; //Final, assign the p's previous node to p.\r\n      }\r\n    }\r\n\r\n    a.reverse(); //Invert the order, so the order of the elements is in web's elements order.\r\n\r\n    for (var i = 0; i < this.length; i++) {\r\n      n = this[i].el.nextSibling;\r\n      while (n) {\r\n        if (this.indexOf(n) == -1) {\r\n          if (n.nodeType === 1) {\r\n            if (a.length > 0) {\r\n              if (a.indexOf(n) == -1) {\r\n                a.push(n);\r\n              }\r\n            } else {\r\n              a.push(n);\r\n            }\r\n          }\r\n        }\r\n\r\n        n = n.nextSibling;\r\n      }\r\n    }\r\n    return a; //Final, return in order's array.\r\n  }\r\n\r\n  // 支援 for...of 迭代\r\n  [Symbol.iterator]() {\r\n    let index = 0;\r\n    const self = this;\r\n    return {\r\n      next() {\r\n        return index < self.length\r\n          ? { value: self[index++], done: false }\r\n          : { done: true };\r\n      },\r\n    };\r\n  }\r\n\r\n  // 自訂 toString 標籤\r\n  get [Symbol.toStringTag]() {\r\n    return `ZekiCollection(${this.length})`;\r\n  }\r\n\r\n  // 將集合轉換為陣列\r\n  toArray() {\r\n    return Array.from({ length: this.length }, (_, i) => this[i]);\r\n  }\r\n\r\n  // on 方法：為每個元素綁定事件\r\n  on(event, handler) {\r\n    return this.forEach((el) => el.on(event, handler));\r\n  }\r\n\r\n  // 其他自訂方法可以在此擴充...\r\n}\r\n","// src/debug.js\r\nlet isDebug = false;\r\n\r\n/**\r\n * 設定是否開啟 debug 模式\r\n * @param {boolean} value\r\n */\r\nexport function setDebug(value) {\r\n  isDebug = value;\r\n}\r\n\r\n/**\r\n * 設定 debug 模式\r\n * @param  {...any} args \r\n */\r\nexport function log(...args) {\r\n  if (isDebug) console.log(\"[ZekiCore Log]:\", ...args);\r\n}","import {  one, all, getId, getIds, getTag, getClass } from \"./dom-select.js\";\r\nimport {  makeTag, makeText,  } from \"./dom-create.js\";\r\nimport { importJS, loadZekiImports } from \"./loader.js\";\r\nimport { setDebug, log } from \"./debug.js\";\r\n\r\nexport const ZekiCore = {};\r\n\r\n// 使用 defineProperty 加到命名空間上（不可列舉、不可寫入與不可配置）\r\nObject.defineProperties(ZekiCore, {\r\n  \"one\": {\r\n    value: one,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"all\": {\r\n    value: all,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getId\": {\r\n    value: getId,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getIds\": {\r\n    value: getIds,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getTag\": {\r\n    value: getTag,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"getClass\": {\r\n    value: getClass,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"makeTag\": {\r\n    value: makeTag,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"makeText\": {\r\n    value: makeText,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"importJS\": {\r\n    value: importJS,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"loadZekiImports\": {\r\n    value: loadZekiImports,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"setDebug\": {\r\n    value: setDebug,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  \"log\": {\r\n    value: log,\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: false,\r\n  },\r\n  // ...更多函式\r\n  \"version\": {\r\n    value: '1.0.0',\r\n    enumerable: false, // 不會在 for...in 被列出\r\n    writable: false, // 無法被覆寫\r\n    configurable: false, // 無法刪除\r\n  },\r\n});","// src/dom-select.js\r\nimport { ZekiElement } from \"./element.js\";\r\nimport { ZekiCollection } from './collection.js';\r\n\r\n/**\r\n * get element by selector.\r\n * @param {string} selector - CSS 選擇器\r\n * @returns {ZekiElement} - 對應的 DOM 元素\r\n */\r\nexport function one(selector) {\r\n  const el = document.querySelector(selector);\r\n  return el ? new ZekiElement(el) : null;\r\n}\r\n\r\n/**\r\n * get elements by selector.\r\n * @param {string} selector - CSS 選擇器\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function all(selector) {\r\n  const nodeList = document.querySelectorAll(selector);\r\n  const elements = Array.from(nodeList, el => new ZekiElement(el));\r\n  return new ZekiCollection(elements);\r\n}\r\n\r\n/**\r\n * get element by id.\r\n * @param {string} id - 元素 ID\r\n * @returns {ZekiElement} - 對應的 DOM 元素\r\n */\r\nexport function getId(id) {\r\n  const el = document.getElementById(id);\r\n  return el ? new ZekiElement(el) : null;\r\n}\r\n\r\n/**\r\n * get elements by id array.\r\n * @param {Array} arr - 元素 ID 陣列\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function getIds(...ids) {\r\n   const elements = ids.map((id) => {\r\n    const el = document.getElementById(id);\r\n    if (el) {\r\n      return new ZekiElement(el);\r\n    } else {\r\n      console.warn(`getIds: ${id} is not exist`);\r\n      return null;\r\n    }\r\n  }).filter((el) => el !== null);\r\n  return new ZekiCollection(elements);\r\n}\r\n\r\n/**\r\n * get elements by tag name.\r\n * @param {string} tagName - 元素名稱\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function getTag(tagName) {\r\n  const htmlCollection = document.getElementsByTagName(tagName);\r\n  const elements = Array.from(htmlCollection, el => new ZekiElement(el));\r\n  return new ZekiCollection(elements);\r\n}\r\n\r\n/**\r\n * get elements by class name.\r\n * @param {*} className - 類別名稱\r\n * @returns {ZekiCollection} - 對應的 DOM 元素集合\r\n */\r\nexport function getClass(className) {\r\n  const htmlCollection = document.getElementsByClassName(className);\r\n  const elements = Array.from(htmlCollection, el => new ZekiElement(el));\r\n  return new ZekiCollection(elements);\r\n}\r\n","// src/dom-create.js\r\n\r\nimport { ZekiElement } from \"./element.js\";\r\n\r\n/**\r\n * create elements by tag name.\r\n * @param {string} tagName - 元素名稱\r\n * @returns {HTMLElement} - 對應的 DOM 元素\r\n */\r\nexport function makeTag(tagName) {\r\n  return new ZekiElement(document.createElement(tagName));\r\n}\r\n\r\n/**\r\n * create text node.\r\n * @param {string} textContnet - 文字內容\r\n * @returns {Text} - 對應的 DOM 文字節點\r\n */\r\nexport function makeText(textContnet) {\r\n  return document.createTextNode(textContnet);\r\n}\r\n","// src/loader.js\r\nexport function importJS(jsArray) {\r\n  let scriptTag;\r\n  for (let i = 0; i < jsArray.length; i++) {\r\n    scriptTag = document.createElement(\"script\");\r\n    scriptTag.async = false;\r\n    scriptTag.type = \"text/javascript\";\r\n    scriptTag.src = jsArray[i];\r\n    document.head.appendChild(scriptTag);\r\n  }\r\n}\r\n\r\nexport function loadZekiImports() {\r\n  const scripts = document.querySelectorAll('script[src*=\"ZekiCore\"][import]');\r\n  for (const script of scripts) {\r\n    const ImportSrc = script.getAttribute(\"import\").trim();\r\n    if (ImportSrc) {\r\n      const importTag = document.createElement(\"script\");\r\n      importTag.async = false;\r\n      importTag.type = \"text/javascript\";\r\n      importTag.src = `scripts/${ImportSrc}.js`;\r\n      importTag.onerror = () => {\r\n        console.error(`Failed to load script: ${importTag.src}`);\r\n      };\r\n      document.head.appendChild(importTag);\r\n      script.removeAttribute(\"import\");\r\n    }\r\n  }\r\n}\r\n","// src/index.js\r\nimport { ZekiCore } from './core.js';\r\nimport { initializeZekiCore } from './init.js';\r\n\r\nObject.freeze(ZekiCore); // 避免改動\r\ninitializeZekiCore(); // 初始化 ZekiCore\r\n\r\nif (typeof window !== \"undefined\") {\r\n  window.ZekiCore = ZekiCore; // 全域變數名稱 window.ZekiCore\r\n  window.zk = ZekiCore; // 簡寫風格\r\n}","import { ZekiCore } from './core.js';\r\nexport function initializeZekiCore() {\r\n  // 顯示版權聲明\r\n  const crz = \"Copyright Zone\";\r\n  const line = crz.padStart(crz.length + 15, \"-\").padEnd(crz.length + 30, \"-\");\r\n  console.log(\r\n    `%c${line}\\n\r\n    Author: Zeki\r\n    Mail: zekixfly@hotmail.com\r\n\r\n    版權聲明:\r\n    一、本網站的版權屬原作者所有。\r\n    二、盼望尊重知識產權，如要轉貼複製請註明出處來源。\r\n    三、出處來源: https://zekixfly.github.io/\r\n    \\n${line}`,\r\n    \"font-size: small; color: brown;\"\r\n  );\r\n\r\n  // 禁止使用者操作\r\n  document.oncontextmenu = () => false; // disable contextmenu\r\n  document.ondragstart = () => false; // disable drag\r\n  document.onselectstart = () => false; // disable select\r\n\r\n  // DOM 完成後載入 ZekiCore imports\r\n  document.addEventListener(\"DOMContentLoaded\", ZekiCore.loadZekiImports); // load ZekiCore.js imports\r\n}\r\n"],"names":["ZekiElement","constructor","el","this","getTag","tag","Array","from","getElementsByTagName","map","getClass","className","getElementsByClassName","getAttr","attr","getAttribute","setAttr","key","val","setAttribute","setAttrs","obj","Object","entries","forEach","delAttr","removeAttribute","addKid","child","hasOwnProperty","appendChild","addKids","children","delKid","removeChild","delKids","addClass","classList","add","delClass","remove","siblings","p","previousSibling","nodeType","push","reverse","n","nextSibling","dataBind","data","querySelectorAll","node","zText","zHtml","undefined","innerText","innerHTML","on","eventType","handler","options","addEventListener","off","removeEventListener","ZekiCollection","elements","super","i","length","callback","item","resultSet","Set","prev","includes","next","allSiblings","sort","a","b","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","arrSiblings","indexOf","Symbol","iterator","index","self","value","done","toStringTag","toArray","_","event","isDebug","ZekiCore","defineProperties","one","selector","document","querySelector","enumerable","writable","configurable","all","nodeList","getId","id","getElementById","getIds","ids","console","htmlCollection","tagName","makeTag","createElement","makeText","textContnet","createTextNode","importJS","jsArray","scriptTag","async","type","src","head","loadZekiImports","scripts","script","trim","ImportSrc","importTag","onerror","error","setDebug","log","args","version","freeze","crz","line","padStart","padEnd","oncontextmenu","ondragstart","onselectstart","initializeZekiCore","window","zk"],"mappings":"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"}